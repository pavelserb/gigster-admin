# === ARTBAT Prague - Оптимизированная конфигурация Apache ===

# === Compression ===
<IfModule mod_deflate.c>
  # Включаем сжатие для всех текстовых файлов
  AddOutputFilterByType DEFLATE text/plain
  AddOutputFilterByType DEFLATE text/html
  AddOutputFilterByType DEFLATE text/xml
  AddOutputFilterByType DEFLATE text/css
  AddOutputFilterByType DEFLATE application/xml
  AddOutputFilterByType DEFLATE application/xhtml+xml
  AddOutputFilterByType DEFLATE application/rss+xml
  AddOutputFilterByType DEFLATE application/javascript
  AddOutputFilterByType DEFLATE application/x-javascript
  AddOutputFilterByType DEFLATE application/json
  AddOutputFilterByType DEFLATE image/svg+xml
  
  # Уровень сжатия (1-9, 9 = максимальное сжатие)
  DeflateCompressionLevel 9
  
  # Исключаем старые браузеры
  BrowserMatch ^Mozilla/4 gzip-only-text/html
  BrowserMatch ^Mozilla/4\.0[678] no-gzip
  BrowserMatch \bMSIE !no-gzip !gzip-only-text/html
</IfModule>

# === Brotli Compression (если доступен) ===
<IfModule mod_brotli.c>
  BrotliCompressionQuality 11
  BrotliFilterNoteInput brotli_ratio
  BrotliFilterNoteOutput brotli_ratio
  
  AddOutputFilterByType BROTLI_COMPRESS text/html text/plain text/css application/javascript application/json image/svg+xml
</IfModule>

# === Caching ===
<IfModule mod_expires.c>
  ExpiresActive On
  
  # HTML/JSON — без кэша (для динамического контента)
  <FilesMatch "\.(html?|json)$">
    ExpiresDefault "access plus 0 seconds"
    ExpiresByType text/html "access plus 0 seconds"
    ExpiresByType application/json "access plus 0 seconds"
  </FilesMatch>
  
  # CSS/JS/SVG — 30 дней
  <FilesMatch "\.(css|js|mjs|svg)$">
    ExpiresDefault "access plus 30 days"
    ExpiresByType text/css "access plus 30 days"
    ExpiresByType application/javascript "access plus 30 days"
    ExpiresByType application/x-javascript "access plus 30 days"
    ExpiresByType image/svg+xml "access plus 30 days"
  </FilesMatch>
  
  # Медиа и шрифты — 1 год immutable
  <FilesMatch "\.(png|jpe?g|webp|gif|ico|mp4|webm|woff2?|ttf|eot)$">
    ExpiresDefault "access plus 1 year"
    ExpiresByType image/png "access plus 1 year"
    ExpiresByType image/jpeg "access plus 1 year"
    ExpiresByType image/webp "access plus 1 year"
    ExpiresByType image/gif "access plus 1 year"
    ExpiresByType image/x-icon "access plus 1 year"
    ExpiresByType video/mp4 "access plus 1 year"
    ExpiresByType video/webm "access plus 1 year"
    ExpiresByType application/font-woff "access plus 1 year"
    ExpiresByType application/font-woff2 "access plus 1 year"
    ExpiresByType application/x-font-ttf "access plus 1 year"
  </FilesMatch>
</IfModule>

# === Cache-Control Headers ===
<IfModule mod_headers.c>
  # HTML/JSON — без кэша
  <FilesMatch "\.(html?|json)$">
    Header set Cache-Control "no-cache, no-store, must-revalidate"
    Header set Pragma "no-cache"
    Header set Expires "0"
  </FilesMatch>
  
  # CSS/JS/SVG — среднее кэширование
  <FilesMatch "\.(css|js|mjs|svg)$">
    Header set Cache-Control "public, max-age=2592000"
  </FilesMatch>
  
  # Медиа и шрифты — долгое кэширование
  <FilesMatch "\.(png|jpe?g|webp|gif|ico|mp4|webm|woff2?|ttf|eot)$">
    Header set Cache-Control "public, max-age=31536000, immutable"
  </FilesMatch>
  
  # Security headers
  Header always set X-Content-Type-Options "nosniff"
  Header always set X-Frame-Options "SAMEORIGIN"
  Header always set X-XSS-Protection "1; mode=block"
  Header always set Referrer-Policy "strict-origin-when-cross-origin"
  Header always set Permissions-Policy "geolocation=(), microphone=(), camera=()"
  
  # HSTS (если SSL)
  Header always set Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
  
  # CSP (Content Security Policy)
  Header always set Content-Security-Policy "
    default-src 'self';
    img-src 'self' data: https:;
    media-src 'self' blob:;
    script-src 'self' 'unsafe-inline';
    style-src 'self' 'unsafe-inline' https://fonts.googleapis.com;
    font-src 'self' https://fonts.gstatic.com;
    connect-src 'self';
    frame-ancestors 'self';
    frame-src https://www.openstreetmap.org https://www.google.com https://maps.google.com;
    object-src 'none';
    base-uri 'self';
    form-action 'self';
  "
</IfModule>

# === Performance Optimizations ===
<IfModule mod_rewrite.c>
  RewriteEngine On
  
  # Принудительный HTTPS
  RewriteCond %{HTTPS} off
  RewriteRule ^(.*)$ https://%{HTTP_HOST}%{REQUEST_URI} [L,R=301]
  
  # Убираем trailing slash
  RewriteCond %{REQUEST_FILENAME} !-d
  RewriteCond %{THE_REQUEST} /([^.]+?)/[?\s] [NC]
  RewriteRule ^ /%1 [R=301,L]
  
  # Убираем www (если нужно)
  # RewriteCond %{HTTP_HOST} ^www\.(.*)$ [NC]
  # RewriteRule ^(.*)$ https://%1/$1 [R=301,L]
</IfModule>

# === File Type Optimizations ===
<IfModule mod_mime.c>
  # WebP поддержка
  AddType image/webp .webp
  
  # WOFF2 шрифты
  AddType application/font-woff2 .woff2
  
  # Видео форматы
  AddType video/mp4 .mp4
  AddType video/webm .webm
</IfModule>

# === Gzip для статических файлов ===
<FilesMatch "\.(css|js|html|xml|txt)$">
  <IfModule mod_deflate.c>
    SetOutputFilter DEFLATE
  </IfModule>
</FilesMatch>

# === Запрет доступа к служебным файлам ===
<FilesMatch "^(\.htaccess|\.htpasswd|\.git|\.env|composer\.json|package\.json|README\.md|DEPLOYMENT\.md|deploy-.*\.sh|hosting-config\.json|_server|backups)">
  Order allow,deny
  Deny from all
</FilesMatch>

# === Запрет доступа к backup файлам ===
<FilesMatch "\.(bak|backup|old|tmp|temp|log)$">
  Order allow,deny
  Deny from all
</FilesMatch>

# === Запрет доступа к системным файлам ===
<FilesMatch "^(Thumbs\.db|\.DS_Store|\._\.|\.Spotlight-V100|\.Trashes|ehthumbs\.db|Desktop\.ini)$">
  Order allow,deny
  Deny from all
</FilesMatch>

# === Защита от hotlinking изображений ===
# Раскомментируйте если хотите защитить изображения
# RewriteEngine On
# RewriteCond %{HTTP_REFERER} !^$
# RewriteCond %{HTTP_REFERER} !^https?://(www\.)?yourdomain\.com [NC]
# RewriteCond %{HTTP_REFERER} !^https?://(www\.)?google\.com [NC]
# RewriteCond %{HTTP_REFERER} !^https?://(www\.)?bing\.com [NC]
# RewriteRule \.(jpg|jpeg|png|gif|webp)$ - [F,L]

# === Защита от ботов (опционально) ===
# <IfModule mod_rewrite.c>
#   RewriteEngine On
#   RewriteCond %{HTTP_USER_AGENT} (bot|crawler|spider|scraper) [NC]
#   RewriteRule ^robots\.txt$ - [F,L]
# </IfModule>
